"use strict";(self.webpackChunkbrickhub_docs=self.webpackChunkbrickhub_docs||[]).push([[486],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>b});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var u=r.createContext({}),s=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=s(e.components);return r.createElement(u.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=s(t),b=a,m=p["".concat(u,".").concat(b)]||p[b]||c[b]||o;return t?r.createElement(m,i(i({ref:n},d),{},{components:t})):r.createElement(m,i({ref:n},d))}));function b(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=p;var l={};for(var u in n)hasOwnProperty.call(n,u)&&(l[u]=n[u]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=t[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},762:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var r=t(7462),a=(t(7294),t(3905));const o={slug:"/mason-bundle",description:"Learn how to create and work with brick bundles.",sidebar_position:5},i="\ud83d\udce6 Bundling Bricks",l={unversionedId:"managing_bricks/mason_bundle",id:"managing_bricks/mason_bundle",title:"\ud83d\udce6 Bundling Bricks",description:"Learn how to create and work with brick bundles.",source:"@site/docs/managing_bricks/mason_bundle.md",sourceDirName:"managing_bricks",slug:"/mason-bundle",permalink:"/mason-bundle",draft:!1,editUrl:"https://github.com/brick-hub/docs.brickhub.dev/tree/main/docs/managing_bricks/mason_bundle.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{slug:"/mason-bundle",description:"Learn how to create and work with brick bundles.",sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"\ud83d\uddd1 Removing Bricks",permalink:"/mason-remove"}},u={},s=[{value:"\ud83d\ude80 Overview",id:"-overview",level:2},{value:"\ud83e\uddf6 Bundle Usage",id:"-bundle-usage",level:2},{value:"\ud83e\udea1 Unbundle Usage",id:"-unbundle-usage",level:2},{value:"\ud83c\udfaf Using Dart Bundles",id:"-using-dart-bundles",level:2}],d={toc:s};function c(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"-bundling-bricks"},"\ud83d\udce6 Bundling Bricks"),(0,a.kt)("p",null,"In this section, we'll take a look at how to create and work with bundled versions of existing bricks."),(0,a.kt)("h2",{id:"-overview"},"\ud83d\ude80 Overview"),(0,a.kt)("p",null,"Bundles are convenient for cases where you want to include your brick as part of another app or upload the bundle for later use."),(0,a.kt)("p",null,"There are currently two types of bundles:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"strong"},"Universal"))," - a platform-agnostic bundle primarily used when publishing to BrickHub"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"strong"},"Dart"))," - a Dart specific bundle which can be used to programmatically generate code from a brick in other Dart applications")),(0,a.kt)("p",null,"We can go to/from a bundle using the ",(0,a.kt)("inlineCode",{parentName:"p"},"mason bundle")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"mason unbundle")," command respectively."),(0,a.kt)("h2",{id:"-bundle-usage"},"\ud83e\uddf6 Bundle Usage"),(0,a.kt)("p",null,"To generate a bundle:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# Create a universal bundle from a local brick.\nmason bundle ./path/to/brick -o ./path/to/destination\n\n# Create a dart bundle from a local brick.\nmason bundle ./path/to/brick -t dart -o ./path/to/destination\n\n# Create a universal bundle from a git brick.\nmason bundle --source git https://github.com/:org/:repo -o ./path/to/destination\n\n# Create a dart bundle from a git brick.\nmason bundle --source git https://github.com/:org/:repo -t dart -o ./path/to/destination\n\n# Create a universal bundle from a hosted brick.\nmason bundle --source hosted <BRICK_NAME> -o ./path/to/destination\n\n# Create a dart bundle from a hosted brick.\nmason bundle --source hosted <BRICK_NAME> -t dart -o ./path/to/destination\n")),(0,a.kt)("h2",{id:"-unbundle-usage"},"\ud83e\udea1 Unbundle Usage"),(0,a.kt)("p",null,"You can use mason to generate a brick from an existing bundle. Unbundling is useful in cases where you want to make changes to an existing bundle because you can first unbundle, make the changes to the template, and generate a new bundle."),(0,a.kt)("p",null,"To generate a brick template from an existing bundle:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# Universal Bundle\nmason unbundle ./path/to/bundle -o ./path/to/destination/\n\n# Dart Bundle\nmason unbundle ./path/to/bundle -t dart -o ./path/to/destination/\n")),(0,a.kt)("h2",{id:"-using-dart-bundles"},"\ud83c\udfaf Using Dart Bundles"),(0,a.kt)("p",null,"Dart bundles can be included and imported from within Dart applications in order to programmatically generate code."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"import 'package:mason/mason.dart';\n\nimport './path/to/my/bundle.dart';\n\nFuture<void> main() async {\n  // Create a MasonGenerator from the existing bundle.\n  final generator = MasonGenerator.fromBundle(myBundle);\n\n  // Generate code based on the bundled brick.\n  await generator.generate(...);\n}\n")))}c.isMDXComponent=!0}}]);