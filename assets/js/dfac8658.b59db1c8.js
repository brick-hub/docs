"use strict";(self.webpackChunkbrickhub_docs=self.webpackChunkbrickhub_docs||[]).push([[361],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>d});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var l=n.createContext({}),s=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=s(r),d=i,b=m["".concat(l,".").concat(d)]||m[d]||u[d]||a;return r?n.createElement(b,o(o({ref:t},p),{},{components:r})):n.createElement(b,o({ref:t},p))}));function d(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:i,o[1]=c;for(var s=2;s<a;s++)o[s]=r[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},6877:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>c,toc:()=>s});var n=r(7462),i=(r(7294),r(3905));const a={slug:"/brick-structure",description:"Learn about the structure of a brick.",sidebar_position:2},o="Structure of a Brick \ud83e\uddf1",c={unversionedId:"creating_bricks/brick_structure",id:"creating_bricks/brick_structure",title:"Structure of a Brick \ud83e\uddf1",description:"Learn about the structure of a brick.",source:"@site/docs/creating_bricks/brick_structure.md",sourceDirName:"creating_bricks",slug:"/brick-structure",permalink:"/brick-structure",draft:!1,editUrl:"https://github.com/brick-hub/docs.brickhub.dev/tree/main/docs/creating_bricks/brick_structure.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{slug:"/brick-structure",description:"Learn about the structure of a brick.",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Creating Bricks \u2728",permalink:"/mason-new"},next:{title:"Brick Syntax \ud83e\udd78",permalink:"/brick-syntax"}},l={},s=[{value:"Overview \ud83d\ude80",id:"overview-",level:2},{value:"<code>brick.yaml</code>",id:"brickyaml",level:2},{value:"<code>__brick__</code>",id:"__brick__",level:2}],p={toc:s};function u(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"structure-of-a-brick-"},"Structure of a Brick \ud83e\uddf1"),(0,i.kt)("h2",{id:"overview-"},"Overview \ud83d\ude80"),(0,i.kt)("p",null,"If we take a closer look at the example brick we just generated, it should look like:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"\u251c\u2500\u2500 CHANGELOG.md\n\u251c\u2500\u2500 LICENSE\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 __brick__\n\u2514\u2500\u2500 brick.yaml\n")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"CHANGELOG"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"LICENSE"),", and ",(0,i.kt)("inlineCode",{parentName:"p"},"README")," are all standard files found across many projects so we won't focus on them. The two important entities are the ",(0,i.kt)("inlineCode",{parentName:"p"},"__brick__")," directory and the ",(0,i.kt)("inlineCode",{parentName:"p"},"brick.yaml")," file."),(0,i.kt)("h2",{id:"brickyaml"},(0,i.kt)("inlineCode",{parentName:"h2"},"brick.yaml")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"brick.yaml")," file is a manifest which contains metadata for the current brick. The newly generated ",(0,i.kt)("inlineCode",{parentName:"p"},"brick.yaml")," should look something like:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"name: example\ndescription: An example brick\n\n# The following defines the version and build number for your brick.\n# A version number is three numbers separated by dots, like 1.2.34\n# followed by an optional build number (separated by a +).\nversion: 0.1.0+1\n\n# The following defines the environment for the current brick.\n# It includes the version of mason that the brick requires.\nenvironment:\n  mason: '>=0.1.0-dev <0.1.0'\n\n# Variables specify dynamic values that your brick depends on.\n# Zero or more variables can be specified for a given brick.\n# Each variable has:\n#  * a type (string, number, boolean, enum, or array)\n#  * an optional short description\n#  * an optional default value\n#  * an optional list of default values (array only)\n#  * an optional prompt phrase used when asking for the variable\n#  * a list of values (enums only)\nvars:\n  name:\n    type: string\n    description: Your name.\n    default: Dash\n    prompt: What is your name?\n")),(0,i.kt)("h2",{id:"__brick__"},(0,i.kt)("inlineCode",{parentName:"h2"},"__brick__")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"__brick__")," directory contains the template for your brick. Any files, directories within the ",(0,i.kt)("inlineCode",{parentName:"p"},"__brick__")," will be generated when the brick is used via ",(0,i.kt)("inlineCode",{parentName:"p"},"mason make"),"."),(0,i.kt)("p",null,"In the example brick, our ",(0,i.kt)("inlineCode",{parentName:"p"},"__brick__")," directory contains a single file called ",(0,i.kt)("inlineCode",{parentName:"p"},"HELLO.md")," with the following content:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-md"},"# Hello {{name}}!\n")),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"Templates currently support ",(0,i.kt)("a",{parentName:"p",href:"https://mustache.github.io/"},"mustache")," but support for additional templating specifications is on the roadmap.")),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"Refer to the ",(0,i.kt)("a",{parentName:"p",href:"https://mustache.github.io/mustache.5.html"},"mustache specification")," for more information about ",(0,i.kt)("inlineCode",{parentName:"p"},"mustache")," and its capabilities.")))}u.isMDXComponent=!0}}]);